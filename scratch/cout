===[C E K]===
Cycle:	1
Env: (none)
| (empty)
Code : App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]] LAM[App[+ x 1 ]] LAM[LAM[x]] LAM[LAM[App[f x ]]] LAM[LAM[App[f App[f x ] ]]] LAM[LAM[App[f App[f App[f x ] ] ]]] ]] LAM[LAM[x]] LAM[LAM[y]] LAM[LAM[LAM[App[App[cond e_true ] e_false ]]]] ]
Frame: return

=============
===[C E K]===
Cycle:	2
Env: (none)
| (empty)
Code : LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]] LAM[App[+ x 1 ]] LAM[LAM[x]] LAM[LAM[App[f x ]]] LAM[LAM[App[f App[f x ] ]]] LAM[LAM[App[f App[f App[f x ] ] ]]] ]]
Frame: application
| vals: 
| exprs: LAM[LAM[x]] LAM[LAM[y]] LAM[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
=============
===[C E K]===
Cycle:	3
Env: (none)
| (empty)
Code : CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]] LAM[App[+ x 1 ]] LAM[LAM[x]] LAM[LAM[App[f x ]]] LAM[LAM[App[f App[f x ] ]]] LAM[LAM[App[f App[f App[f x ] ] ]]] ]]
Frame: application
| vals: 
| exprs: LAM[LAM[x]] LAM[LAM[y]] LAM[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
=============
===[C E K]===
Cycle:	4
Env: (none)
| (empty)
Code : LAM[LAM[x]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]] LAM[App[+ x 1 ]] LAM[LAM[x]] LAM[LAM[App[f x ]]] LAM[LAM[App[f App[f x ] ]]] LAM[LAM[App[f App[f App[f x ] ] ]]] ]] 
| exprs: LAM[LAM[y]] LAM[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
=============
===[C E K]===
Cycle:	5
Env: (none)
| (empty)
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]] LAM[App[+ x 1 ]] LAM[LAM[x]] LAM[LAM[App[f x ]]] LAM[LAM[App[f App[f x ] ]]] LAM[LAM[App[f App[f App[f x ] ] ]]] ]] 
| exprs: LAM[LAM[y]] LAM[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
=============
===[C E K]===
Cycle:	6
Env: (none)
| (empty)
Code : LAM[LAM[y]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]] LAM[App[+ x 1 ]] LAM[LAM[x]] LAM[LAM[App[f x ]]] LAM[LAM[App[f App[f x ] ]]] LAM[LAM[App[f App[f App[f x ] ] ]]] ]] CLO[LAM[x]] 
| exprs: LAM[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
=============
===[C E K]===
Cycle:	7
Env: (none)
| (empty)
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]] LAM[App[+ x 1 ]] LAM[LAM[x]] LAM[LAM[App[f x ]]] LAM[LAM[App[f App[f x ] ]]] LAM[LAM[App[f App[f App[f x ] ] ]]] ]] CLO[LAM[x]] 
| exprs: LAM[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
=============
===[C E K]===
Cycle:	8
Env: (none)
| (empty)
Code : LAM[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]] LAM[App[+ x 1 ]] LAM[LAM[x]] LAM[LAM[App[f x ]]] LAM[LAM[App[f App[f x ] ]]] LAM[LAM[App[f App[f App[f x ] ] ]]] ]] CLO[LAM[x]] CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	9
Env: (none)
| (empty)
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]] LAM[App[+ x 1 ]] LAM[LAM[x]] LAM[LAM[App[f x ]]] LAM[LAM[App[f App[f x ] ]]] LAM[LAM[App[f App[f App[f x ] ] ]]] ]] CLO[LAM[x]] CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	10
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Code : App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]] LAM[App[+ x 1 ]] LAM[LAM[x]] LAM[LAM[App[f x ]]] LAM[LAM[App[f App[f x ] ]]] LAM[LAM[App[f App[f App[f x ] ] ]]] ]
Frame: return

=============
===[C E K]===
Cycle:	11
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Code : LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]]
Frame: application
| vals: 
| exprs: LAM[App[+ x 1 ]] LAM[LAM[x]] LAM[LAM[App[f x ]]] LAM[LAM[App[f App[f x ] ]]] LAM[LAM[App[f App[f App[f x ] ] ]]] 
=============
===[C E K]===
Cycle:	12
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Code : CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]]
Frame: application
| vals: 
| exprs: LAM[App[+ x 1 ]] LAM[LAM[x]] LAM[LAM[App[f x ]]] LAM[LAM[App[f App[f x ] ]]] LAM[LAM[App[f App[f App[f x ] ] ]]] 
=============
===[C E K]===
Cycle:	13
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Code : LAM[App[+ x 1 ]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]] 
| exprs: LAM[LAM[x]] LAM[LAM[App[f x ]]] LAM[LAM[App[f App[f x ] ]]] LAM[LAM[App[f App[f App[f x ] ] ]]] 
=============
===[C E K]===
Cycle:	14
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Code : CLO[App[+ x 1 ]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]] 
| exprs: LAM[LAM[x]] LAM[LAM[App[f x ]]] LAM[LAM[App[f App[f x ] ]]] LAM[LAM[App[f App[f App[f x ] ] ]]] 
=============
===[C E K]===
Cycle:	15
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Code : LAM[LAM[x]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]] CLO[App[+ x 1 ]] 
| exprs: LAM[LAM[App[f x ]]] LAM[LAM[App[f App[f x ] ]]] LAM[LAM[App[f App[f App[f x ] ] ]]] 
=============
===[C E K]===
Cycle:	16
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]] CLO[App[+ x 1 ]] 
| exprs: LAM[LAM[App[f x ]]] LAM[LAM[App[f App[f x ] ]]] LAM[LAM[App[f App[f App[f x ] ] ]]] 
=============
===[C E K]===
Cycle:	17
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Code : LAM[LAM[App[f x ]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]] CLO[App[+ x 1 ]] CLO[LAM[x]] 
| exprs: LAM[LAM[App[f App[f x ] ]]] LAM[LAM[App[f App[f App[f x ] ] ]]] 
=============
===[C E K]===
Cycle:	18
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]] CLO[App[+ x 1 ]] CLO[LAM[x]] 
| exprs: LAM[LAM[App[f App[f x ] ]]] LAM[LAM[App[f App[f App[f x ] ] ]]] 
=============
===[C E K]===
Cycle:	19
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Code : LAM[LAM[App[f App[f x ] ]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]] CLO[App[+ x 1 ]] CLO[LAM[x]] CLO[LAM[App[f x ]]] 
| exprs: LAM[LAM[App[f App[f App[f x ] ] ]]] 
=============
===[C E K]===
Cycle:	20
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Code : CLO[LAM[App[f App[f x ] ]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]] CLO[App[+ x 1 ]] CLO[LAM[x]] CLO[LAM[App[f x ]]] 
| exprs: LAM[LAM[App[f App[f App[f x ] ] ]]] 
=============
===[C E K]===
Cycle:	21
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Code : LAM[LAM[App[f App[f App[f x ] ] ]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]] CLO[App[+ x 1 ]] CLO[LAM[x]] CLO[LAM[App[f x ]]] CLO[LAM[App[f App[f x ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	22
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Code : CLO[LAM[App[f App[f App[f x ] ] ]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]] CLO[App[+ x 1 ]] CLO[LAM[x]] CLO[LAM[App[f x ]]] CLO[LAM[App[f App[f x ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	23
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : App[LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] ]
Frame: return

=============
===[C E K]===
Cycle:	24
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : LAM[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]]
Frame: application
| vals: 
| exprs: LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] 
=============
===[C E K]===
Cycle:	25
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]]
Frame: application
| vals: 
| exprs: LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] LAM[App[pair true ]] LAM[App[pair false ]] 
=============
===[C E K]===
Cycle:	26
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : LAM[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] 
| exprs: LAM[App[pair true ]] LAM[App[pair false ]] 
=============
===[C E K]===
Cycle:	27
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] 
| exprs: LAM[App[pair true ]] LAM[App[pair false ]] 
=============
===[C E K]===
Cycle:	28
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : LAM[App[pair true ]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: LAM[App[pair false ]] 
=============
===[C E K]===
Cycle:	29
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[App[pair true ]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: LAM[App[pair false ]] 
=============
===[C E K]===
Cycle:	30
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : LAM[App[pair false ]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	31
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[App[pair false ]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]] CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	32
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
Code : App[LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] ]
Frame: return

=============
===[C E K]===
Cycle:	33
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
Code : LAM[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]]
Frame: application
| vals: 
| exprs: LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
=============
===[C E K]===
Cycle:	34
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
Code : CLO[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]]
Frame: application
| vals: 
| exprs: LAM[App[App[n LAM[false] ] true ]] LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
=============
===[C E K]===
Cycle:	35
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
Code : LAM[App[App[n LAM[false] ] true ]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] 
| exprs: LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
=============
===[C E K]===
Cycle:	36
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] 
| exprs: LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]] LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
=============
===[C E K]===
Cycle:	37
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
Code : LAM[LAM[LAM[App[f App[App[n f ] x ] ]]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] CLO[App[App[n LAM[false] ] true ]] 
| exprs: LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
=============
===[C E K]===
Cycle:	38
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
Code : CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] CLO[App[App[n LAM[false] ] true ]] 
| exprs: LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
=============
===[C E K]===
Cycle:	39
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
Code : LAM[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] CLO[App[App[n LAM[false] ] true ]] CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
=============
===[C E K]===
Cycle:	40
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
Code : CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] CLO[App[App[n LAM[false] ] true ]] CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
=============
===[C E K]===
Cycle:	41
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
Code : LAM[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] CLO[App[App[n LAM[false] ] true ]] CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	42
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]] CLO[App[App[n LAM[false] ] true ]] CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	43
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : App[LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] ]
Frame: return

=============
===[C E K]===
Cycle:	44
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : LAM[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]]
Frame: application
| vals: 
| exprs: LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
=============
===[C E K]===
Cycle:	45
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : CLO[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]]
Frame: application
| vals: 
| exprs: LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
=============
===[C E K]===
Cycle:	46
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : LAM[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] 
| exprs: App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
=============
===[C E K]===
Cycle:	47
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] 
| exprs: App[add1 three ] App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
=============
===[C E K]===
Cycle:	48
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : App[add1 three ]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] 
| exprs: App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
=============
===[C E K]===
Cycle:	49
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : add1
Frame: application
| vals: 
| exprs: three 
=============
===[C E K]===
Cycle:	50
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
Frame: application
| vals: 
| exprs: three 
=============
===[C E K]===
Cycle:	51
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : three
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	52
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : CLO[LAM[App[f App[f App[f x ] ] ]]]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	53
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : LAM[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] 
| exprs: App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
=============
===[C E K]===
Cycle:	54
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] 
| exprs: App[App[add two ] three ] App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
=============
===[C E K]===
Cycle:	55
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : App[App[add two ] three ]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] CLO[LAM[App[f App[App[n f ] x ] ]]] 
| exprs: App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
=============
===[C E K]===
Cycle:	56
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : App[add two ]
Frame: application
| vals: 
| exprs: three 
=============
===[C E K]===
Cycle:	57
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : add
Frame: application
| vals: 
| exprs: two 
=============
===[C E K]===
Cycle:	58
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
Frame: application
| vals: 
| exprs: two 
=============
===[C E K]===
Cycle:	59
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : two
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	60
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : CLO[LAM[App[f App[f x ] ]]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	61
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f x ] ]]]
Code : LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]
Frame: application
| vals: 
| exprs: three 
=============
===[C E K]===
Cycle:	62
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f x ] ]]]
Code : CLO[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]
Frame: application
| vals: 
| exprs: three 
=============
===[C E K]===
Cycle:	63
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : three
Frame: application
| vals: CLO[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	64
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : CLO[LAM[App[f App[f App[f x ] ] ]]]
Frame: application
| vals: CLO[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	65
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f x ] ]]]
| env(m) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] CLO[LAM[App[f App[App[n f ] x ] ]]] 
| exprs: App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
=============
===[C E K]===
Cycle:	66
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f x ] ]]]
| env(m) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] CLO[LAM[App[f App[App[n f ] x ] ]]] 
| exprs: App[App[add three ] three ] LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
=============
===[C E K]===
Cycle:	67
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : App[App[add three ] three ]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] CLO[LAM[App[f App[App[n f ] x ] ]]] CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]] 
| exprs: LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
=============
===[C E K]===
Cycle:	68
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : App[add three ]
Frame: application
| vals: 
| exprs: three 
=============
===[C E K]===
Cycle:	69
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : add
Frame: application
| vals: 
| exprs: three 
=============
===[C E K]===
Cycle:	70
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
Frame: application
| vals: 
| exprs: three 
=============
===[C E K]===
Cycle:	71
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : three
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	72
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : CLO[LAM[App[f App[f App[f x ] ] ]]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	73
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]
Frame: application
| vals: 
| exprs: three 
=============
===[C E K]===
Cycle:	74
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]
Frame: application
| vals: 
| exprs: three 
=============
===[C E K]===
Cycle:	75
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : three
Frame: application
| vals: CLO[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	76
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : CLO[LAM[App[f App[f App[f x ] ] ]]]
Frame: application
| vals: CLO[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	77
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(m) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] CLO[LAM[App[f App[App[n f ] x ] ]]] CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]] 
| exprs: LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
=============
===[C E K]===
Cycle:	78
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(m) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] CLO[LAM[App[f App[App[n f ] x ] ]]] CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]] 
| exprs: LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
=============
===[C E K]===
Cycle:	79
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : LAM[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] CLO[LAM[App[f App[App[n f ] x ] ]]] CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]] CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	80
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: CLO[App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]] CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]] CLO[LAM[App[f App[App[n f ] x ] ]]] CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]] CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	81
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Code : App[LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] ]
Frame: return

=============
===[C E K]===
Cycle:	82
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Code : LAM[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]]
Frame: application
| vals: 
| exprs: LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] 
=============
===[C E K]===
Cycle:	83
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Code : CLO[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]]
Frame: application
| vals: 
| exprs: LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] 
=============
===[C E K]===
Cycle:	84
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Code : LAM[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
Frame: application
| vals: CLO[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	85
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Code : CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
Frame: application
| vals: CLO[App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	86
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
Code : App[LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] ]
Frame: return

=============
===[C E K]===
Cycle:	87
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
Code : LAM[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]]
Frame: application
| vals: 
| exprs: LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
=============
===[C E K]===
Cycle:	88
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
Code : CLO[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]]
Frame: application
| vals: 
| exprs: LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
=============
===[C E K]===
Cycle:	89
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
Code : LAM[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: CLO[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] 
| exprs: 
=============
===[C E K]===
Cycle:	90
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: CLO[App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]] 
| exprs: 
=============
===[C E K]===
Cycle:	91
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(mkfac) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Code : App[App[App[App[zcomb mkfac ] three ] ++ ] 0 ]
Frame: return

=============
===[C E K]===
Cycle:	92
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(mkfac) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Code : App[App[App[zcomb mkfac ] three ] ++ ]
Frame: application
| vals: 
| exprs: 0 
=============
===[C E K]===
Cycle:	93
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(mkfac) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Code : App[App[zcomb mkfac ] three ]
Frame: application
| vals: 
| exprs: ++ 
=============
===[C E K]===
Cycle:	94
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(mkfac) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Code : App[zcomb mkfac ]
Frame: application
| vals: 
| exprs: three 
=============
===[C E K]===
Cycle:	95
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(mkfac) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Code : zcomb
Frame: application
| vals: 
| exprs: mkfac 
=============
===[C E K]===
Cycle:	96
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(mkfac) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Code : CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
Frame: application
| vals: 
| exprs: mkfac 
=============
===[C E K]===
Cycle:	97
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(mkfac) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Code : mkfac
Frame: application
| vals: CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	98
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(mkfac) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	99
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Code : App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]
Frame: application
| vals: 
| exprs: three 
=============
===[C E K]===
Cycle:	100
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Code : LAM[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: LAM[App[f LAM[App[App[x x ] v ]] ]] 
=============
===[C E K]===
Cycle:	101
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: LAM[App[f LAM[App[App[x x ] v ]] ]] 
=============
===[C E K]===
Cycle:	102
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Code : LAM[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	103
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	104
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: three 
=============
===[C E K]===
Cycle:	105
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	106
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	107
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : LAM[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	108
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	109
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: three 
=============
===[C E K]===
Cycle:	110
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: three 
=============
===[C E K]===
Cycle:	111
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(mkfac) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Code : three
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	112
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(mkfac) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Code : CLO[LAM[App[f App[f App[f x ] ] ]]]
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	113
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]
Frame: application
| vals: 
| exprs: ++ 
=============
===[C E K]===
Cycle:	114
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : App[App[lamif App[zero? n ] ] one ]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	115
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : App[lamif App[zero? n ] ]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	116
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : lamif
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	117
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	118
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : App[zero? n ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	119
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : zero?
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	120
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	121
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : n
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	122
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[LAM[App[f App[f App[f x ] ] ]]]
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	123
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : App[App[n LAM[false] ] true ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	124
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : App[n LAM[false] ]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	125
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : n
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	126
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[LAM[App[f App[f App[f x ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	127
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : LAM[false]
Frame: application
| vals: CLO[LAM[App[f App[f App[f x ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	128
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[App[f App[f App[f x ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	129
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : LAM[App[f App[f App[f x ] ] ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	130
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : CLO[App[f App[f App[f x ] ] ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	131
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : true
Frame: application
| vals: CLO[App[f App[f App[f x ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	132
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[f App[f App[f x ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	133
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : App[f App[f App[f x ] ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	134
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : f
Frame: application
| vals: 
| exprs: App[f App[f x ] ] 
=============
===[C E K]===
Cycle:	135
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: 
| exprs: App[f App[f x ] ] 
=============
===[C E K]===
Cycle:	136
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : App[f App[f x ] ]
Frame: application
| vals: CLO[false] 
| exprs: 
=============
===[C E K]===
Cycle:	137
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : f
Frame: application
| vals: 
| exprs: App[f x ] 
=============
===[C E K]===
Cycle:	138
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: 
| exprs: App[f x ] 
=============
===[C E K]===
Cycle:	139
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : App[f x ]
Frame: application
| vals: CLO[false] 
| exprs: 
=============
===[C E K]===
Cycle:	140
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : f
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	141
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	142
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[false] 
| exprs: 
=============
===[C E K]===
Cycle:	143
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[false] 
| exprs: 
=============
===[C E K]===
Cycle:	144
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(x) 	= CLO[LAM[x]]
Code : false
Frame: application
| vals: CLO[false] 
| exprs: 
=============
===[C E K]===
Cycle:	145
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[false] 
| exprs: 
=============
===[C E K]===
Cycle:	146
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(x) 	= CLO[LAM[y]]
Code : false
Frame: application
| vals: CLO[false] 
| exprs: 
=============
===[C E K]===
Cycle:	147
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(x) 	= CLO[LAM[y]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[false] 
| exprs: 
=============
===[C E K]===
Cycle:	148
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(x) 	= CLO[LAM[y]]
Code : false
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	149
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(x) 	= CLO[LAM[y]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	150
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	151
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	152
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : one
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	153
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	154
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	155
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	156
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : App[App[mult n ] App[fac App[sub1 n ] ] ]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	157
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : App[mult n ]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	158
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : mult
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	159
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	160
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : n
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	161
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[LAM[App[f App[f App[f x ] ] ]]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	162
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	163
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	164
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : App[fac App[sub1 n ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	165
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : fac
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	166
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	167
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : App[sub1 n ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	168
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : sub1
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	169
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	170
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : n
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	171
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[LAM[App[f App[f App[f x ] ] ]]]
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	172
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	173
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : 1st
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	174
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[App[pair true ]]
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	175
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	176
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	177
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : n
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	178
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[LAM[App[f App[f App[f x ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	179
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[App[f App[f App[f x ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	180
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[App[f App[f App[f x ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	181
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[App[f App[f App[f x ] ] ]]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	182
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[App[f App[f App[f x ] ] ]]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	183
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : App[App[pair zero ] zero ]
Frame: application
| vals: CLO[App[f App[f App[f x ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	184
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : App[pair zero ]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	185
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : pair
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	186
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	187
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : zero
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	188
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	189
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	190
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	191
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : zero
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	192
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	193
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[f App[f App[f x ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	194
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[f App[f App[f x ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	195
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[f App[f App[f x ] ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	196
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : f
Frame: application
| vals: 
| exprs: App[f App[f x ] ] 
=============
===[C E K]===
Cycle:	197
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: 
| exprs: App[f App[f x ] ] 
=============
===[C E K]===
Cycle:	198
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[f App[f x ] ]
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	199
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : f
Frame: application
| vals: 
| exprs: App[f x ] 
=============
===[C E K]===
Cycle:	200
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: 
| exprs: App[f x ] 
=============
===[C E K]===
Cycle:	201
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[f x ]
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	202
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : f
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	203
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	204
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	205
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	206
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	207
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair App[2nd p ] ]
Frame: application
| vals: 
| exprs: App[add1 App[2nd p ] ] 
=============
===[C E K]===
Cycle:	208
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	209
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	210
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[2nd p ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	211
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : 2nd
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	212
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[pair false ]]
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	213
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : p
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	214
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	215
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair false ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	216
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	217
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	218
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : false
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	219
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	220
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	221
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	222
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	223
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	224
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	225
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	226
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	227
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	228
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	229
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	230
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	231
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	232
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	233
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	234
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	235
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	236
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	237
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	238
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[y]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	239
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	240
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	241
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	242
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	243
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	244
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	245
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : y
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	246
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	247
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: App[add1 App[2nd p ] ] 
=============
===[C E K]===
Cycle:	248
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: App[add1 App[2nd p ] ] 
=============
===[C E K]===
Cycle:	249
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[add1 App[2nd p ] ]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	250
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : add1
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	251
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	252
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[2nd p ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	253
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : 2nd
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	254
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[pair false ]]
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	255
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : p
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	256
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	257
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair false ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	258
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	259
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	260
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : false
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	261
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	262
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	263
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	264
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	265
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	266
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	267
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	268
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	269
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	270
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	271
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	272
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	273
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	274
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	275
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	276
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	277
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	278
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	279
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	280
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[y]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	281
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	282
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	283
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	284
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	285
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	286
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	287
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : y
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	288
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	289
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	290
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	291
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	292
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	293
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	294
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair App[2nd p ] ]
Frame: application
| vals: 
| exprs: App[add1 App[2nd p ] ] 
=============
===[C E K]===
Cycle:	295
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	296
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	297
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[2nd p ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	298
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : 2nd
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	299
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[pair false ]]
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	300
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : p
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	301
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	302
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair false ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	303
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	304
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	305
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : false
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	306
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	307
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	308
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	309
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	310
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	311
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	312
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	313
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	314
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	315
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	316
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	317
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	318
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	319
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	320
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	321
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	322
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	323
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	324
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	325
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[y]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	326
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : e_true
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	327
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	328
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	329
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	330
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : e_false
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	331
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	332
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : y
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	333
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	334
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: App[add1 App[2nd p ] ] 
=============
===[C E K]===
Cycle:	335
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: App[add1 App[2nd p ] ] 
=============
===[C E K]===
Cycle:	336
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[add1 App[2nd p ] ]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	337
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : add1
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	338
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	339
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[2nd p ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	340
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : 2nd
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	341
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[pair false ]]
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	342
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : p
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	343
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	344
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair false ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	345
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	346
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	347
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : false
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	348
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	349
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	350
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	351
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	352
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	353
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	354
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	355
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	356
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	357
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	358
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	359
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	360
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	361
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	362
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	363
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	364
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	365
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	366
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	367
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[y]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	368
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : e_true
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	369
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	370
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	371
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	372
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : e_false
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	373
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	374
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : y
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	375
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	376
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	377
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	378
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	379
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	380
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	381
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair App[2nd p ] ]
Frame: application
| vals: 
| exprs: App[add1 App[2nd p ] ] 
=============
===[C E K]===
Cycle:	382
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	383
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	384
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[2nd p ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	385
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : 2nd
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	386
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[pair false ]]
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	387
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : p
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	388
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	389
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair false ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	390
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	391
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	392
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : false
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	393
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	394
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	395
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	396
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	397
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	398
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	399
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	400
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	401
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	402
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	403
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	404
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	405
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	406
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	407
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	408
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	409
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	410
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	411
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	412
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[y]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	413
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : e_true
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	414
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	415
Env: x
| env(x) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	416
Env: x
| env(x) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	417
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : e_false
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	418
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	419
Env: x
| env(x) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(y) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : y
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	420
Env: x
| env(x) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(y) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	421
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: App[add1 App[2nd p ] ] 
=============
===[C E K]===
Cycle:	422
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: App[add1 App[2nd p ] ] 
=============
===[C E K]===
Cycle:	423
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[add1 App[2nd p ] ]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	424
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : add1
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	425
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	426
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[2nd p ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	427
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : 2nd
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	428
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[pair false ]]
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	429
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : p
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	430
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	431
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair false ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	432
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	433
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	434
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : false
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	435
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	436
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	437
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	438
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	439
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	440
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	441
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	442
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	443
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	444
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	445
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	446
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	447
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	448
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	449
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	450
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	451
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	452
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	453
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	454
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[y]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	455
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : e_true
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	456
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	457
Env: x
| env(x) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	458
Env: x
| env(x) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	459
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : e_false
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	460
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	461
Env: x
| env(x) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(y) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : y
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	462
Env: x
| env(x) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(y) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	463
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	464
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	465
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	466
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	467
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair true ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	468
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	469
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	470
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : true
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	471
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	472
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	473
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	474
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	475
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	476
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	477
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	478
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	479
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	480
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	481
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	482
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	483
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	484
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	485
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	486
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	487
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	488
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	489
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	490
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	491
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : e_true
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	492
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	493
Env: x
| env(x) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	494
Env: x
| env(x) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	495
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : e_false
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	496
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	497
Env: x
| env(x) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(y) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : x
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	498
Env: x
| env(x) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(y) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	499
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[x x ] v ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	500
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[x x ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	501
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : x
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	502
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	503
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : x
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	504
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	505
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	506
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	507
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	508
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : LAM[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	509
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	510
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	511
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	512
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : v
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	513
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	514
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	515
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[lamif App[zero? n ] ] one ]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	516
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[lamif App[zero? n ] ]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	517
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : lamif
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	518
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	519
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[zero? n ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	520
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : zero?
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	521
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	522
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : n
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	523
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	524
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[n LAM[false] ] true ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	525
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[n LAM[false] ]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	526
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : n
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	527
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	528
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[false]
Frame: application
| vals: CLO[LAM[App[f App[App[n f ] x ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	529
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[App[f App[App[n f ] x ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	530
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[false]
Code : LAM[App[f App[App[n f ] x ] ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	531
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[false]
Code : CLO[App[f App[App[n f ] x ] ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	532
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : true
Frame: application
| vals: CLO[App[f App[App[n f ] x ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	533
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[f App[App[n f ] x ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	534
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : App[f App[App[n f ] x ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	535
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : f
Frame: application
| vals: 
| exprs: App[App[n f ] x ] 
=============
===[C E K]===
Cycle:	536
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: 
| exprs: App[App[n f ] x ] 
=============
===[C E K]===
Cycle:	537
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : App[App[n f ] x ]
Frame: application
| vals: CLO[false] 
| exprs: 
=============
===[C E K]===
Cycle:	538
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : App[n f ]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	539
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: f 
=============
===[C E K]===
Cycle:	540
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: 
| exprs: f 
=============
===[C E K]===
Cycle:	541
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : f
Frame: application
| vals: CLO[LAM[App[f App[App[n f ] x ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	542
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[App[f App[App[n f ] x ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	543
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
Code : LAM[App[f App[App[n f ] x ] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	544
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
Code : CLO[App[f App[App[n f ] x ] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	545
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[f App[App[n f ] x ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	546
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[f App[App[n f ] x ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	547
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : App[f App[App[n f ] x ] ]
Frame: application
| vals: CLO[false] 
| exprs: 
=============
===[C E K]===
Cycle:	548
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : f
Frame: application
| vals: 
| exprs: App[App[n f ] x ] 
=============
===[C E K]===
Cycle:	549
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: 
| exprs: App[App[n f ] x ] 
=============
===[C E K]===
Cycle:	550
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : App[App[n f ] x ]
Frame: application
| vals: CLO[false] 
| exprs: 
=============
===[C E K]===
Cycle:	551
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : App[n f ]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	552
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: f 
=============
===[C E K]===
Cycle:	553
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: f 
=============
===[C E K]===
Cycle:	554
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : f
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	555
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	556
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : LAM[x]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	557
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : CLO[x]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	558
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	559
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	560
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[false] 
| exprs: 
=============
===[C E K]===
Cycle:	561
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[false] 
| exprs: 
=============
===[C E K]===
Cycle:	562
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(x) 	= CLO[LAM[x]]
Code : false
Frame: application
| vals: CLO[false] 
| exprs: 
=============
===[C E K]===
Cycle:	563
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[false] 
| exprs: 
=============
===[C E K]===
Cycle:	564
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(x) 	= CLO[LAM[y]]
Code : false
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	565
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(x) 	= CLO[LAM[y]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	566
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	567
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	568
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : one
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	569
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	570
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	571
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	572
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[mult n ] App[fac App[sub1 n ] ] ]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	573
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[mult n ]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	574
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : mult
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	575
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	576
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : n
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	577
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	578
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	579
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	580
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[fac App[sub1 n ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	581
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : fac
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	582
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	583
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[sub1 n ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	584
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : sub1
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	585
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	586
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : n
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	587
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	588
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	589
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : 1st
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	590
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[pair true ]]
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	591
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	592
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	593
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : n
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	594
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	595
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[App[f App[App[n f ] x ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	596
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[App[f App[App[n f ] x ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	597
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[App[f App[App[n f ] x ] ]]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	598
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[App[f App[App[n f ] x ] ]]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	599
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[pair zero ] zero ]
Frame: application
| vals: CLO[App[f App[App[n f ] x ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	600
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[pair zero ]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	601
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : pair
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	602
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	603
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : zero
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	604
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	605
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	606
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	607
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : zero
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	608
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	609
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[f App[App[n f ] x ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	610
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[f App[App[n f ] x ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	611
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[f App[App[n f ] x ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	612
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : f
Frame: application
| vals: 
| exprs: App[App[n f ] x ] 
=============
===[C E K]===
Cycle:	613
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: 
| exprs: App[App[n f ] x ] 
=============
===[C E K]===
Cycle:	614
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[App[n f ] x ]
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	615
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[n f ]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	616
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : n
Frame: application
| vals: 
| exprs: f 
=============
===[C E K]===
Cycle:	617
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: 
| exprs: f 
=============
===[C E K]===
Cycle:	618
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : f
Frame: application
| vals: CLO[LAM[App[f App[App[n f ] x ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	619
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[App[f App[App[n f ] x ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	620
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[App[f App[App[n f ] x ] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	621
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[App[f App[App[n f ] x ] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	622
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[f App[App[n f ] x ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	623
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[f App[App[n f ] x ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	624
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[f App[App[n f ] x ] ]
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	625
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : f
Frame: application
| vals: 
| exprs: App[App[n f ] x ] 
=============
===[C E K]===
Cycle:	626
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: 
| exprs: App[App[n f ] x ] 
=============
===[C E K]===
Cycle:	627
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[App[n f ] x ]
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	628
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[n f ]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	629
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : n
Frame: application
| vals: 
| exprs: f 
=============
===[C E K]===
Cycle:	630
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: f 
=============
===[C E K]===
Cycle:	631
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : f
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	632
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	633
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	634
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	635
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	636
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	637
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	638
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	639
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	640
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair App[2nd p ] ]
Frame: application
| vals: 
| exprs: App[add1 App[2nd p ] ] 
=============
===[C E K]===
Cycle:	641
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	642
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	643
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[2nd p ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	644
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : 2nd
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	645
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[pair false ]]
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	646
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : p
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	647
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	648
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair false ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	649
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	650
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	651
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : false
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	652
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	653
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	654
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	655
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	656
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	657
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	658
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	659
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	660
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	661
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	662
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	663
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	664
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	665
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	666
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	667
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	668
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	669
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	670
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	671
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[y]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	672
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	673
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	674
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	675
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	676
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	677
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	678
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : y
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	679
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	680
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: App[add1 App[2nd p ] ] 
=============
===[C E K]===
Cycle:	681
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: App[add1 App[2nd p ] ] 
=============
===[C E K]===
Cycle:	682
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[add1 App[2nd p ] ]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	683
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : add1
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	684
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	685
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[2nd p ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	686
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : 2nd
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	687
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[pair false ]]
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	688
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : p
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	689
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	690
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair false ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	691
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	692
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	693
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : false
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	694
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	695
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	696
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	697
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	698
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	699
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	700
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	701
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	702
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	703
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	704
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	705
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	706
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	707
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	708
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	709
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	710
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	711
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	712
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	713
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[y]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	714
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	715
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	716
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	717
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	718
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	719
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	720
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : y
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	721
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	722
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	723
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	724
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	725
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	726
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	727
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair App[2nd p ] ]
Frame: application
| vals: 
| exprs: App[add1 App[2nd p ] ] 
=============
===[C E K]===
Cycle:	728
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	729
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	730
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[2nd p ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	731
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : 2nd
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	732
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[pair false ]]
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	733
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : p
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	734
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	735
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair false ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	736
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	737
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	738
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : false
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	739
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	740
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	741
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	742
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	743
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	744
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	745
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	746
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	747
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	748
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	749
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	750
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	751
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	752
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	753
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	754
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	755
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	756
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	757
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	758
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[y]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	759
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : e_true
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	760
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	761
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	762
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	763
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : e_false
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	764
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	765
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : y
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	766
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	767
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: App[add1 App[2nd p ] ] 
=============
===[C E K]===
Cycle:	768
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: App[add1 App[2nd p ] ] 
=============
===[C E K]===
Cycle:	769
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[add1 App[2nd p ] ]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	770
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : add1
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	771
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	772
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[2nd p ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	773
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : 2nd
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	774
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[pair false ]]
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	775
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : p
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	776
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	777
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair false ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	778
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	779
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	780
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : false
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	781
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	782
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	783
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	784
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	785
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	786
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	787
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	788
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	789
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	790
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	791
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	792
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	793
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	794
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	795
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	796
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	797
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	798
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	799
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	800
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[y]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	801
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : e_true
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	802
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	803
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	804
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	805
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : e_false
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	806
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	807
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : y
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	808
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	809
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	810
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	811
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	812
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	813
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair true ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	814
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	815
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	816
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : true
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	817
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	818
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	819
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	820
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	821
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	822
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	823
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	824
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	825
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	826
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	827
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	828
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	829
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	830
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	831
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	832
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	833
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	834
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	835
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	836
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	837
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : e_true
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	838
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	839
Env: x
| env(x) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	840
Env: x
| env(x) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	841
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : e_false
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	842
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	843
Env: x
| env(x) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(y) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : x
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	844
Env: x
| env(x) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(y) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	845
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[x x ] v ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	846
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[x x ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	847
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : x
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	848
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	849
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : x
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	850
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	851
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	852
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	853
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	854
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : LAM[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	855
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	856
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	857
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	858
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : v
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	859
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	860
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	861
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[lamif App[zero? n ] ] one ]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	862
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[lamif App[zero? n ] ]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	863
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : lamif
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	864
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	865
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[zero? n ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	866
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : zero?
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	867
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	868
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : n
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	869
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	870
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[n LAM[false] ] true ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	871
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[n LAM[false] ]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	872
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : n
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	873
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	874
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[false]
Frame: application
| vals: CLO[LAM[App[f App[App[n f ] x ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	875
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[App[f App[App[n f ] x ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	876
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
Code : LAM[App[f App[App[n f ] x ] ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	877
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
Code : CLO[App[f App[App[n f ] x ] ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	878
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : true
Frame: application
| vals: CLO[App[f App[App[n f ] x ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	879
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[f App[App[n f ] x ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	880
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : App[f App[App[n f ] x ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	881
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : f
Frame: application
| vals: 
| exprs: App[App[n f ] x ] 
=============
===[C E K]===
Cycle:	882
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: 
| exprs: App[App[n f ] x ] 
=============
===[C E K]===
Cycle:	883
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : App[App[n f ] x ]
Frame: application
| vals: CLO[false] 
| exprs: 
=============
===[C E K]===
Cycle:	884
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : App[n f ]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	885
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: f 
=============
===[C E K]===
Cycle:	886
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: f 
=============
===[C E K]===
Cycle:	887
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : f
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	888
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	889
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : LAM[x]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	890
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : CLO[x]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	891
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	892
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	893
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[false] 
| exprs: 
=============
===[C E K]===
Cycle:	894
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[false] 
| exprs: 
=============
===[C E K]===
Cycle:	895
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(x) 	= CLO[LAM[x]]
Code : false
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	896
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	897
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	898
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	899
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : one
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	900
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	901
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	902
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	903
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[mult n ] App[fac App[sub1 n ] ] ]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	904
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[mult n ]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	905
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : mult
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	906
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	907
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : n
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	908
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	909
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	910
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	911
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[fac App[sub1 n ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	912
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : fac
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	913
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	914
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[sub1 n ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	915
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : sub1
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	916
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	917
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : n
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	918
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	919
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	920
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : 1st
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	921
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[pair true ]]
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	922
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	923
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	924
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : n
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	925
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	926
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[App[f App[App[n f ] x ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	927
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[App[f App[App[n f ] x ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	928
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[App[f App[App[n f ] x ] ]]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	929
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[App[f App[App[n f ] x ] ]]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	930
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[pair zero ] zero ]
Frame: application
| vals: CLO[App[f App[App[n f ] x ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	931
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[pair zero ]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	932
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : pair
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	933
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	934
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : zero
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	935
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	936
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	937
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	938
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : zero
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	939
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	940
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[f App[App[n f ] x ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	941
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[f App[App[n f ] x ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	942
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[f App[App[n f ] x ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	943
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : f
Frame: application
| vals: 
| exprs: App[App[n f ] x ] 
=============
===[C E K]===
Cycle:	944
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: 
| exprs: App[App[n f ] x ] 
=============
===[C E K]===
Cycle:	945
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[App[n f ] x ]
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	946
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[n f ]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	947
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : n
Frame: application
| vals: 
| exprs: f 
=============
===[C E K]===
Cycle:	948
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: f 
=============
===[C E K]===
Cycle:	949
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : f
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	950
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	951
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	952
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	953
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	954
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	955
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	956
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	957
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	958
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair App[2nd p ] ]
Frame: application
| vals: 
| exprs: App[add1 App[2nd p ] ] 
=============
===[C E K]===
Cycle:	959
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	960
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	961
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[2nd p ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	962
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : 2nd
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	963
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[pair false ]]
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	964
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : p
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	965
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	966
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair false ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	967
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	968
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	969
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : false
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	970
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	971
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	972
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	973
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	974
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	975
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	976
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	977
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	978
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	979
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	980
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	981
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	982
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	983
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	984
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	985
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	986
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	987
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	988
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	989
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[y]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	990
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	991
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	992
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	993
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	994
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	995
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	996
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : y
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	997
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	998
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: App[add1 App[2nd p ] ] 
=============
===[C E K]===
Cycle:	999
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: App[add1 App[2nd p ] ] 
=============
===[C E K]===
Cycle:	1000
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[add1 App[2nd p ] ]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1001
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : add1
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	1002
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
Frame: application
| vals: 
| exprs: App[2nd p ] 
=============
===[C E K]===
Cycle:	1003
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[2nd p ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1004
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : 2nd
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	1005
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[pair false ]]
Frame: application
| vals: 
| exprs: p 
=============
===[C E K]===
Cycle:	1006
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : p
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1007
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(p) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1008
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair false ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1009
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	1010
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: false 
=============
===[C E K]===
Cycle:	1011
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : false
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1012
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1013
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1014
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1015
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1016
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	1017
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	1018
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1019
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[y]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1020
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1021
Env: cond
| env(cond) 	= CLO[LAM[y]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1022
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1023
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1024
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1025
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1026
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1027
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[y]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1028
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1029
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1030
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	1031
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[y]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	1032
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	1033
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[y]] 
| exprs: 
=============
===[C E K]===
Cycle:	1034
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1035
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[y]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1036
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	1037
Env: cond
| env(cond) 	= CLO[LAM[y]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[y] 
| exprs: 
=============
===[C E K]===
Cycle:	1038
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : y
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1039
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1040
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1041
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1042
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1043
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1044
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair true ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1045
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1046
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1047
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : true
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1048
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1049
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1050
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1051
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1052
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	1053
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	1054
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1055
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1056
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1057
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1058
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1059
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1060
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1061
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1062
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1063
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1064
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1065
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1066
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	1067
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	1068
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : e_true
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1069
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1070
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1071
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1072
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : e_false
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1073
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[App[f App[App[n f ] x ] ]]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1074
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : x
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1075
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1076
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[App[x x ] v ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1077
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[x x ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1078
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	1079
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	1080
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1081
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1082
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1083
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	1084
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	1085
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : LAM[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1086
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1087
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1088
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1089
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : v
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1090
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1091
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1092
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[lamif App[zero? n ] ] one ]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1093
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[lamif App[zero? n ] ]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1094
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	1095
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	1096
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[zero? n ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1097
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : zero?
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1098
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1099
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1100
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1101
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[false] ] true ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1102
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[false] ]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1103
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	1104
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	1105
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1106
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1107
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : LAM[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1108
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : CLO[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1109
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : true
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1110
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1111
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1112
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1113
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1114
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1115
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : one
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1116
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1117
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1118
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1119
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[mult n ] App[fac App[sub1 n ] ] ]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1120
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[mult n ]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1121
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : mult
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1122
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1123
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1124
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1125
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1126
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1127
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[fac App[sub1 n ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1128
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : fac
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	1129
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	1130
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[sub1 n ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1131
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : sub1
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1132
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1133
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1134
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1135
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1136
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : 1st
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	1137
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[pair true ]]
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	1138
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1139
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1140
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	1141
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	1142
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1143
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1144
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1145
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1146
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[pair zero ] zero ]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1147
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[pair zero ]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1148
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : pair
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1149
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1150
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1151
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1152
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1153
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1154
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1155
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1156
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1157
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1158
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1159
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1160
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair true ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1161
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1162
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1163
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : true
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1164
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1165
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1166
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1167
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1168
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	1169
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	1170
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1171
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1172
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1173
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1174
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1175
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1176
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1177
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1178
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1179
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1180
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1181
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1182
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	1183
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	1184
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1185
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1186
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1187
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1188
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1189
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1190
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1191
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1192
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[App[x x ] v ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1193
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[x x ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1194
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	1195
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	1196
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1197
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1198
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1199
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	1200
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	1201
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : LAM[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1202
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1203
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1204
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1205
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : v
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1206
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1207
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1208
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[lamif App[zero? n ] ] one ]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1209
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[lamif App[zero? n ] ]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1210
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	1211
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	1212
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[zero? n ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1213
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : zero?
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1214
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1215
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1216
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1217
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[false] ] true ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1218
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[false] ]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1219
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	1220
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	1221
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1222
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1223
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : LAM[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1224
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : CLO[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1225
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : true
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1226
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1227
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1228
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1229
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1230
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1231
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : one
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1232
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1233
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1234
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1235
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[mult n ] App[fac App[sub1 n ] ] ]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1236
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[mult n ]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1237
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : mult
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1238
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1239
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1240
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1241
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1242
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1243
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[fac App[sub1 n ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1244
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : fac
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	1245
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	1246
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[sub1 n ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1247
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : sub1
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1248
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1249
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1250
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1251
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1252
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : 1st
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	1253
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[pair true ]]
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	1254
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1255
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1256
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	1257
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	1258
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1259
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1260
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1261
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1262
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[pair zero ] zero ]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1263
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[pair zero ]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1264
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : pair
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1265
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1266
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1267
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1268
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1269
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1270
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1271
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1272
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1273
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1274
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1275
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1276
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair true ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1277
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1278
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1279
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : true
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1280
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1281
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1282
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1283
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1284
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	1285
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	1286
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1287
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1288
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1289
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1290
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1291
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1292
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1293
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1294
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1295
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1296
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1297
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1298
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	1299
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	1300
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1301
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1302
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1303
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1304
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1305
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1306
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1307
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1308
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[App[x x ] v ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1309
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[x x ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1310
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	1311
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	1312
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1313
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1314
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1315
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	1316
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	1317
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : LAM[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1318
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1319
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1320
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1321
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : v
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1322
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1323
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1324
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[lamif App[zero? n ] ] one ]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1325
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[lamif App[zero? n ] ]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1326
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	1327
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	1328
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[zero? n ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1329
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : zero?
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1330
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1331
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1332
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1333
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[false] ] true ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1334
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[false] ]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1335
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	1336
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	1337
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1338
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1339
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : LAM[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1340
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : CLO[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1341
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : true
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1342
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1343
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1344
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1345
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1346
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1347
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : one
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1348
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1349
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1350
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1351
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[mult n ] App[fac App[sub1 n ] ] ]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1352
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[mult n ]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1353
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : mult
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1354
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1355
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1356
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1357
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1358
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1359
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[fac App[sub1 n ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1360
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : fac
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	1361
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	1362
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[sub1 n ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1363
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : sub1
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1364
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1365
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1366
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1367
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1368
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : 1st
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	1369
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[pair true ]]
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	1370
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1371
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1372
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	1373
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	1374
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1375
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1376
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1377
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1378
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[pair zero ] zero ]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1379
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[pair zero ]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1380
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : pair
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1381
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1382
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1383
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1384
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1385
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1386
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1387
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1388
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1389
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1390
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1391
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1392
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair true ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1393
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1394
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1395
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : true
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1396
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1397
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1398
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1399
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1400
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	1401
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	1402
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1403
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1404
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1405
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1406
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1407
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1408
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1409
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1410
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1411
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1412
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1413
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1414
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	1415
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	1416
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1417
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1418
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1419
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1420
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1421
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1422
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1423
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1424
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[App[x x ] v ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1425
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[x x ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1426
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	1427
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	1428
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1429
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1430
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1431
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	1432
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	1433
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : LAM[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1434
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1435
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1436
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1437
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : v
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1438
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1439
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1440
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[lamif App[zero? n ] ] one ]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1441
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[lamif App[zero? n ] ]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1442
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	1443
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	1444
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[zero? n ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1445
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : zero?
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1446
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1447
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1448
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1449
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[false] ] true ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1450
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[false] ]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1451
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	1452
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	1453
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1454
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1455
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : LAM[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1456
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : CLO[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1457
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : true
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1458
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1459
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1460
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1461
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1462
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1463
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : one
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1464
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1465
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1466
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1467
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[mult n ] App[fac App[sub1 n ] ] ]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1468
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[mult n ]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1469
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : mult
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1470
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1471
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1472
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1473
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1474
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1475
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[fac App[sub1 n ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1476
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : fac
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	1477
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	1478
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[sub1 n ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1479
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : sub1
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1480
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1481
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1482
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1483
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1484
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : 1st
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	1485
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[pair true ]]
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	1486
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1487
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1488
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	1489
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	1490
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1491
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1492
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1493
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1494
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[pair zero ] zero ]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1495
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[pair zero ]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1496
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : pair
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1497
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1498
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1499
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1500
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1501
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1502
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1503
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1504
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1505
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1506
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1507
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1508
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair true ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1509
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1510
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1511
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : true
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1512
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1513
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1514
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1515
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1516
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	1517
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	1518
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1519
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1520
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1521
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1522
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1523
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1524
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1525
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1526
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1527
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1528
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1529
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1530
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	1531
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	1532
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1533
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1534
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1535
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1536
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1537
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1538
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1539
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1540
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[App[x x ] v ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1541
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[x x ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1542
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	1543
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	1544
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1545
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1546
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1547
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	1548
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	1549
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : LAM[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1550
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1551
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1552
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1553
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : v
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1554
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1555
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1556
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[lamif App[zero? n ] ] one ]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1557
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[lamif App[zero? n ] ]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1558
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	1559
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	1560
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[zero? n ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1561
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : zero?
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1562
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1563
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1564
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1565
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[false] ] true ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1566
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[false] ]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1567
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	1568
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	1569
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1570
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1571
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : LAM[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1572
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : CLO[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1573
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : true
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1574
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1575
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1576
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1577
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1578
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1579
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : one
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1580
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1581
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1582
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1583
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[mult n ] App[fac App[sub1 n ] ] ]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1584
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[mult n ]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1585
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : mult
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1586
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1587
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1588
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1589
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1590
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1591
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[fac App[sub1 n ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1592
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : fac
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	1593
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	1594
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[sub1 n ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1595
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : sub1
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1596
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1597
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1598
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1599
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1600
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : 1st
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	1601
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[pair true ]]
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	1602
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1603
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1604
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	1605
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	1606
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1607
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1608
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1609
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1610
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[pair zero ] zero ]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1611
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[pair zero ]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1612
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : pair
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1613
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1614
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1615
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1616
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1617
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1618
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1619
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1620
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1621
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1622
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1623
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1624
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair true ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1625
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1626
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1627
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : true
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1628
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1629
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1630
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1631
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1632
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	1633
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	1634
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1635
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1636
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1637
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1638
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1639
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1640
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1641
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1642
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1643
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1644
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1645
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1646
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	1647
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	1648
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1649
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1650
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1651
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1652
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1653
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1654
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1655
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1656
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[App[x x ] v ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1657
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[x x ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1658
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	1659
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	1660
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1661
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1662
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1663
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	1664
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	1665
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : LAM[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1666
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1667
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1668
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1669
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : v
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1670
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1671
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1672
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[lamif App[zero? n ] ] one ]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1673
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[lamif App[zero? n ] ]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1674
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	1675
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	1676
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[zero? n ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1677
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : zero?
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1678
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1679
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1680
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1681
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[false] ] true ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1682
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[false] ]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1683
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	1684
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	1685
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1686
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1687
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : LAM[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1688
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : CLO[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1689
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : true
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1690
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1691
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1692
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1693
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1694
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1695
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : one
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1696
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1697
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1698
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1699
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[mult n ] App[fac App[sub1 n ] ] ]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1700
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[mult n ]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1701
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : mult
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1702
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1703
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1704
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1705
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1706
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1707
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[fac App[sub1 n ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1708
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : fac
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	1709
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	1710
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[sub1 n ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1711
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : sub1
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1712
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1713
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1714
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1715
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1716
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : 1st
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	1717
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[pair true ]]
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	1718
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1719
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1720
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	1721
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	1722
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1723
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1724
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1725
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1726
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[pair zero ] zero ]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1727
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[pair zero ]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1728
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : pair
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1729
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1730
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1731
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1732
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1733
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1734
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1735
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1736
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1737
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1738
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1739
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1740
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair true ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1741
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1742
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1743
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : true
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1744
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1745
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1746
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1747
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1748
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	1749
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	1750
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1751
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1752
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1753
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1754
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1755
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1756
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1757
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1758
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1759
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1760
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1761
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1762
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	1763
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	1764
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1765
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1766
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1767
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1768
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1769
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1770
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1771
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1772
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[App[x x ] v ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1773
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[x x ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1774
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	1775
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	1776
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1777
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1778
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1779
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	1780
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	1781
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : LAM[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1782
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1783
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1784
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1785
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : v
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1786
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1787
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1788
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[lamif App[zero? n ] ] one ]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1789
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[lamif App[zero? n ] ]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1790
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	1791
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	1792
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[zero? n ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1793
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : zero?
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1794
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1795
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1796
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1797
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[false] ] true ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1798
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[false] ]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1799
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	1800
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	1801
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1802
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1803
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : LAM[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1804
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : CLO[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1805
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : true
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1806
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1807
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1808
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1809
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1810
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1811
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : one
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1812
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1813
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1814
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1815
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[mult n ] App[fac App[sub1 n ] ] ]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1816
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[mult n ]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1817
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : mult
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1818
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1819
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1820
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1821
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1822
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1823
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[fac App[sub1 n ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1824
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : fac
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	1825
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	1826
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[sub1 n ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1827
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : sub1
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1828
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1829
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1830
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1831
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1832
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : 1st
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	1833
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[pair true ]]
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	1834
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1835
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1836
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	1837
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	1838
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1839
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1840
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1841
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1842
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[pair zero ] zero ]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1843
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[pair zero ]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1844
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : pair
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1845
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1846
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1847
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1848
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1849
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1850
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1851
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1852
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1853
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1854
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1855
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1856
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair true ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1857
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1858
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1859
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : true
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1860
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1861
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1862
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1863
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1864
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	1865
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	1866
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1867
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1868
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1869
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1870
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1871
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1872
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1873
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1874
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1875
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1876
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1877
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1878
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	1879
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	1880
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1881
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1882
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1883
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1884
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1885
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1886
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1887
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1888
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[App[x x ] v ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1889
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[x x ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1890
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	1891
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	1892
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1893
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1894
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1895
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	1896
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	1897
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : LAM[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1898
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1899
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1900
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	1901
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : v
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1902
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1903
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1904
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[lamif App[zero? n ] ] one ]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1905
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[lamif App[zero? n ] ]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1906
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	1907
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	1908
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[zero? n ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1909
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : zero?
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1910
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1911
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1912
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1913
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[false] ] true ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1914
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[false] ]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1915
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	1916
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	1917
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1918
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1919
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : LAM[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1920
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : CLO[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1921
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : true
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1922
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1923
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1924
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1925
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1926
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	1927
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : one
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1928
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1929
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1930
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	1931
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[mult n ] App[fac App[sub1 n ] ] ]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1932
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[mult n ]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1933
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : mult
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1934
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1935
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1936
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1937
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1938
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	1939
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[fac App[sub1 n ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1940
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : fac
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	1941
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	1942
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[sub1 n ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1943
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : sub1
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1944
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	1945
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1946
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1947
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1948
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : 1st
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	1949
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[pair true ]]
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	1950
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1951
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1952
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	1953
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	1954
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1955
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1956
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1957
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	1958
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[pair zero ] zero ]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1959
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[pair zero ]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1960
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : pair
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1961
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1962
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1963
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1964
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1965
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	1966
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1967
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1968
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1969
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	1970
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1971
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1972
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair true ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1973
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1974
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	1975
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : true
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1976
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1977
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1978
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1979
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1980
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	1981
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	1982
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1983
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1984
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1985
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	1986
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1987
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	1988
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1989
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	1990
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1991
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1992
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	1993
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1994
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	1995
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	1996
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1997
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	1998
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	1999
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2000
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2001
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2002
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2003
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2004
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[App[x x ] v ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2005
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[x x ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2006
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	2007
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	2008
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2009
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2010
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2011
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	2012
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	2013
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : LAM[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2014
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2015
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2016
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2017
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : v
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2018
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2019
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2020
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[lamif App[zero? n ] ] one ]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2021
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[lamif App[zero? n ] ]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2022
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	2023
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	2024
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[zero? n ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2025
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : zero?
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2026
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2027
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2028
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2029
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[false] ] true ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2030
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[false] ]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2031
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	2032
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	2033
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2034
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2035
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : LAM[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2036
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : CLO[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2037
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : true
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2038
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2039
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2040
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2041
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2042
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2043
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : one
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2044
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2045
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2046
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2047
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[mult n ] App[fac App[sub1 n ] ] ]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2048
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[mult n ]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2049
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : mult
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2050
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2051
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2052
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2053
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2054
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2055
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[fac App[sub1 n ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2056
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : fac
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	2057
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	2058
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[sub1 n ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2059
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : sub1
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2060
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2061
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2062
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2063
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2064
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : 1st
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	2065
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[pair true ]]
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	2066
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2067
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2068
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	2069
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	2070
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2071
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2072
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2073
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2074
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[pair zero ] zero ]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2075
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[pair zero ]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2076
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : pair
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2077
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2078
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2079
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2080
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2081
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2082
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2083
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2084
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2085
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2086
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2087
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2088
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair true ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2089
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2090
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2091
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : true
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2092
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2093
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2094
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2095
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2096
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	2097
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	2098
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2099
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2100
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2101
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2102
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2103
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2104
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2105
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2106
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2107
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2108
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2109
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2110
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	2111
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	2112
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2113
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2114
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2115
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2116
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2117
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2118
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2119
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2120
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[App[x x ] v ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2121
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[x x ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2122
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	2123
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	2124
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2125
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2126
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2127
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	2128
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	2129
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : LAM[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2130
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2131
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2132
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2133
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : v
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2134
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2135
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2136
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[lamif App[zero? n ] ] one ]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2137
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[lamif App[zero? n ] ]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2138
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	2139
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	2140
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[zero? n ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2141
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : zero?
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2142
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2143
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2144
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2145
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[false] ] true ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2146
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[false] ]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2147
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	2148
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	2149
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2150
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2151
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : LAM[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2152
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : CLO[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2153
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : true
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2154
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2155
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2156
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2157
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2158
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2159
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : one
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2160
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2161
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2162
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2163
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[mult n ] App[fac App[sub1 n ] ] ]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2164
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[mult n ]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2165
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : mult
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2166
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2167
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2168
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2169
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2170
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2171
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[fac App[sub1 n ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2172
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : fac
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	2173
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	2174
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[sub1 n ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2175
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : sub1
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2176
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2177
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2178
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2179
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2180
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : 1st
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	2181
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[pair true ]]
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	2182
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2183
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2184
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	2185
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	2186
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2187
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2188
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2189
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2190
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[pair zero ] zero ]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2191
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[pair zero ]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2192
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : pair
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2193
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2194
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2195
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2196
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2197
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2198
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2199
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2200
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2201
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2202
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2203
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2204
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair true ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2205
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2206
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2207
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : true
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2208
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2209
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2210
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2211
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2212
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	2213
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	2214
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2215
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2216
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2217
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2218
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2219
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2220
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2221
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2222
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2223
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2224
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2225
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2226
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	2227
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	2228
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2229
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2230
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2231
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2232
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2233
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2234
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2235
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2236
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[App[x x ] v ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2237
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[x x ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2238
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	2239
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	2240
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2241
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2242
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2243
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	2244
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	2245
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : LAM[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2246
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2247
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2248
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2249
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : v
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2250
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2251
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2252
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[lamif App[zero? n ] ] one ]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2253
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[lamif App[zero? n ] ]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2254
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	2255
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	2256
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[zero? n ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2257
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : zero?
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2258
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2259
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2260
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2261
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[false] ] true ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2262
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[false] ]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2263
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	2264
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	2265
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2266
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2267
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : LAM[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2268
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : CLO[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2269
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : true
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2270
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2271
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2272
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2273
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2274
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2275
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : one
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2276
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2277
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2278
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2279
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[mult n ] App[fac App[sub1 n ] ] ]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2280
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[mult n ]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2281
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : mult
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2282
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2283
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2284
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2285
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2286
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2287
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[fac App[sub1 n ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2288
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : fac
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	2289
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	2290
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[sub1 n ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2291
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : sub1
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2292
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2293
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2294
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2295
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2296
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : 1st
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	2297
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[pair true ]]
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	2298
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2299
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2300
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	2301
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	2302
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2303
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2304
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2305
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2306
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[pair zero ] zero ]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2307
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[pair zero ]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2308
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : pair
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2309
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2310
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2311
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2312
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2313
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2314
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2315
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2316
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2317
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2318
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2319
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2320
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair true ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2321
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2322
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2323
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : true
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2324
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2325
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2326
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2327
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2328
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	2329
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	2330
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2331
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2332
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2333
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2334
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2335
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2336
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2337
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2338
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2339
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2340
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2341
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2342
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	2343
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	2344
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2345
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2346
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2347
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2348
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2349
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2350
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2351
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2352
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[App[x x ] v ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2353
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[x x ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2354
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	2355
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	2356
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2357
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2358
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2359
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	2360
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	2361
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : LAM[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2362
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2363
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2364
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2365
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : v
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2366
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2367
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2368
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[lamif App[zero? n ] ] one ]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2369
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[lamif App[zero? n ] ]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2370
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	2371
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	2372
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[zero? n ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2373
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : zero?
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2374
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2375
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2376
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2377
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[false] ] true ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2378
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[false] ]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2379
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	2380
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	2381
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2382
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2383
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : LAM[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2384
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : CLO[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2385
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : true
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2386
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2387
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2388
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2389
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2390
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2391
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : one
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2392
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2393
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2394
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2395
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[mult n ] App[fac App[sub1 n ] ] ]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2396
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[mult n ]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2397
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : mult
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2398
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2399
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2400
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2401
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2402
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2403
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[fac App[sub1 n ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2404
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : fac
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	2405
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	2406
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[sub1 n ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2407
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : sub1
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2408
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2409
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2410
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2411
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2412
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : 1st
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	2413
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[pair true ]]
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	2414
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2415
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2416
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	2417
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	2418
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2419
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2420
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2421
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2422
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[pair zero ] zero ]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2423
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[pair zero ]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2424
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : pair
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2425
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2426
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2427
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2428
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2429
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2430
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2431
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2432
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2433
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2434
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2435
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2436
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair true ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2437
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2438
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2439
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : true
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2440
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2441
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2442
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2443
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2444
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	2445
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	2446
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2447
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2448
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2449
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2450
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2451
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2452
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2453
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2454
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2455
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2456
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2457
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2458
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	2459
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	2460
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2461
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2462
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2463
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2464
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2465
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2466
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2467
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2468
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[App[x x ] v ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2469
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[x x ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2470
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	2471
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	2472
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2473
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2474
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2475
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	2476
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	2477
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : LAM[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2478
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2479
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2480
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2481
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : v
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2482
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2483
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2484
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[lamif App[zero? n ] ] one ]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2485
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[lamif App[zero? n ] ]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2486
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	2487
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	2488
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[zero? n ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2489
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : zero?
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2490
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2491
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2492
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2493
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[false] ] true ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2494
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[false] ]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2495
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	2496
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	2497
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2498
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2499
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : LAM[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2500
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : CLO[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2501
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : true
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2502
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2503
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2504
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2505
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2506
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2507
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : one
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2508
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2509
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2510
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2511
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[mult n ] App[fac App[sub1 n ] ] ]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2512
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[mult n ]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2513
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : mult
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2514
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2515
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2516
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2517
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2518
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2519
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[fac App[sub1 n ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2520
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : fac
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	2521
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	2522
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[sub1 n ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2523
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : sub1
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2524
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2525
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2526
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2527
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2528
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : 1st
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	2529
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[pair true ]]
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	2530
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2531
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2532
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	2533
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	2534
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2535
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2536
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2537
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2538
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[pair zero ] zero ]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2539
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[pair zero ]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2540
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : pair
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2541
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2542
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2543
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2544
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2545
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2546
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2547
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2548
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2549
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2550
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2551
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2552
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair true ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2553
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2554
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2555
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : true
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2556
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2557
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2558
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2559
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2560
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	2561
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	2562
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2563
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2564
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2565
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2566
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2567
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2568
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2569
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2570
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2571
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2572
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2573
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2574
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	2575
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	2576
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2577
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2578
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2579
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2580
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2581
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2582
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2583
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2584
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[App[x x ] v ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2585
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[x x ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2586
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	2587
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	2588
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2589
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2590
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2591
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	2592
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	2593
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : LAM[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2594
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2595
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2596
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2597
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : v
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2598
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2599
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2600
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[lamif App[zero? n ] ] one ]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2601
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[lamif App[zero? n ] ]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2602
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	2603
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	2604
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[zero? n ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2605
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : zero?
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2606
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2607
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2608
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2609
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[false] ] true ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2610
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[false] ]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2611
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	2612
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	2613
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2614
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2615
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : LAM[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2616
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : CLO[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2617
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : true
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2618
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2619
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2620
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2621
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2622
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2623
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : one
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2624
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2625
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2626
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2627
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[mult n ] App[fac App[sub1 n ] ] ]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2628
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[mult n ]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2629
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : mult
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2630
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2631
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2632
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2633
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2634
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2635
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[fac App[sub1 n ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2636
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : fac
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	2637
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	2638
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[sub1 n ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2639
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : sub1
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2640
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2641
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2642
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2643
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2644
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : 1st
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	2645
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[pair true ]]
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	2646
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2647
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2648
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	2649
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	2650
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2651
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2652
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2653
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2654
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[pair zero ] zero ]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2655
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[pair zero ]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2656
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : pair
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2657
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2658
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2659
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2660
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2661
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2662
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2663
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2664
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2665
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2666
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2667
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2668
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair true ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2669
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2670
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2671
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : true
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2672
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2673
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2674
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2675
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2676
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	2677
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	2678
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2679
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2680
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2681
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2682
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2683
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2684
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2685
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2686
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2687
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2688
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2689
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2690
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	2691
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	2692
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2693
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2694
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2695
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2696
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2697
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2698
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2699
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2700
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[App[x x ] v ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2701
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[x x ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2702
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	2703
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	2704
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2705
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2706
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2707
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	2708
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	2709
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : LAM[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2710
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2711
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2712
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2713
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : v
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2714
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2715
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2716
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[lamif App[zero? n ] ] one ]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2717
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[lamif App[zero? n ] ]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2718
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	2719
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	2720
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[zero? n ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2721
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : zero?
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2722
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2723
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2724
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2725
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[false] ] true ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2726
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[false] ]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2727
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	2728
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	2729
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2730
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2731
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : LAM[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2732
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : CLO[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2733
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : true
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2734
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2735
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2736
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2737
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2738
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2739
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : one
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2740
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2741
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2742
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2743
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[mult n ] App[fac App[sub1 n ] ] ]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2744
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[mult n ]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2745
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : mult
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2746
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2747
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2748
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2749
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2750
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2751
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[fac App[sub1 n ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2752
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : fac
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	2753
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	2754
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[sub1 n ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2755
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : sub1
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2756
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2757
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2758
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2759
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2760
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : 1st
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	2761
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[pair true ]]
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	2762
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2763
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2764
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	2765
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	2766
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2767
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2768
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2769
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2770
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[pair zero ] zero ]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2771
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[pair zero ]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2772
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : pair
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2773
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2774
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2775
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2776
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2777
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2778
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2779
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2780
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2781
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2782
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2783
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2784
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair true ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2785
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2786
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2787
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : true
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2788
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2789
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2790
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2791
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2792
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	2793
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	2794
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2795
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2796
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2797
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2798
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2799
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2800
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2801
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2802
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2803
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2804
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2805
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2806
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	2807
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	2808
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2809
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2810
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2811
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2812
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2813
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2814
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2815
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2816
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[App[x x ] v ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2817
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[x x ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2818
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	2819
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	2820
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2821
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2822
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2823
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	2824
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	2825
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : LAM[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2826
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2827
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2828
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2829
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : v
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2830
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2831
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2832
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[lamif App[zero? n ] ] one ]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2833
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[lamif App[zero? n ] ]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2834
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	2835
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	2836
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[zero? n ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2837
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : zero?
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2838
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2839
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2840
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2841
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[false] ] true ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2842
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[false] ]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2843
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	2844
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	2845
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2846
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2847
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : LAM[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2848
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : CLO[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2849
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : true
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2850
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2851
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2852
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2853
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2854
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2855
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : one
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2856
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2857
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2858
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2859
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[mult n ] App[fac App[sub1 n ] ] ]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2860
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[mult n ]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2861
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : mult
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2862
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2863
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2864
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2865
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2866
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2867
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[fac App[sub1 n ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2868
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : fac
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	2869
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	2870
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[sub1 n ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2871
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : sub1
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2872
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2873
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2874
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2875
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2876
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : 1st
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	2877
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[pair true ]]
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	2878
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2879
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2880
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	2881
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	2882
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2883
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2884
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2885
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2886
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[pair zero ] zero ]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2887
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[pair zero ]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2888
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : pair
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2889
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2890
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2891
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2892
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2893
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	2894
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2895
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2896
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2897
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2898
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2899
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2900
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair true ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2901
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2902
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2903
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : true
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2904
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2905
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2906
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2907
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2908
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	2909
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	2910
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2911
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2912
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2913
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	2914
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2915
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2916
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2917
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	2918
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2919
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2920
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2921
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2922
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	2923
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	2924
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2925
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2926
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2927
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	2928
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2929
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2930
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2931
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2932
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[App[x x ] v ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2933
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[x x ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2934
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	2935
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	2936
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2937
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2938
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2939
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	2940
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	2941
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : LAM[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2942
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2943
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2944
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
Code : CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	2945
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : v
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2946
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2947
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2948
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[lamif App[zero? n ] ] one ]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2949
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[lamif App[zero? n ] ]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2950
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	2951
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: App[zero? n ] 
=============
===[C E K]===
Cycle:	2952
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[zero? n ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2953
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : zero?
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2954
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[n LAM[false] ] true ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2955
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2956
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[n LAM[false] ] true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2957
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[false] ] true ]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2958
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[false] ]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2959
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	2960
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[false] 
=============
===[C E K]===
Cycle:	2961
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2962
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[false]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2963
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : LAM[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2964
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
Code : CLO[x]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	2965
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : true
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2966
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	2967
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2968
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[false]
| env(x) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2969
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2970
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: one 
=============
===[C E K]===
Cycle:	2971
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : one
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2972
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[App[f x ]]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2973
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2974
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[App[f x ]]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: App[App[mult n ] App[fac App[sub1 n ] ] ] 
=============
===[C E K]===
Cycle:	2975
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[mult n ] App[fac App[sub1 n ] ] ]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2976
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[mult n ]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2977
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : mult
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2978
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2979
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2980
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2981
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2982
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]]
Frame: application
| vals: 
| exprs: App[fac App[sub1 n ] ] 
=============
===[C E K]===
Cycle:	2983
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[fac App[sub1 n ] ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	2984
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : fac
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	2985
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[x x ] v ]]
Frame: application
| vals: 
| exprs: App[sub1 n ] 
=============
===[C E K]===
Cycle:	2986
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : App[sub1 n ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2987
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : sub1
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2988
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
Frame: application
| vals: 
| exprs: n 
=============
===[C E K]===
Cycle:	2989
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2990
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(zcomb) 	= CLO[App[LAM[App[f LAM[App[App[x x ] v ]] ]] LAM[App[f LAM[App[App[x x ] v ]] ]] ]]
| env(fac) 	= CLO[App[App[x x ] v ]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2991
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2992
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : 1st
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	2993
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[pair true ]]
Frame: application
| vals: 
| exprs: App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] 
=============
===[C E K]===
Cycle:	2994
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	2995
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	2996
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : n
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	2997
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] 
=============
===[C E K]===
Cycle:	2998
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	2999
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	3000
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	3001
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: App[App[pair zero ] zero ] 
=============
===[C E K]===
Cycle:	3002
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[App[pair zero ] zero ]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	3003
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : App[pair zero ]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	3004
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : pair
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	3005
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	3006
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	3007
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	3008
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	3009
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[App[lamif c ] a ] b ]]]
Frame: application
| vals: 
| exprs: zero 
=============
===[C E K]===
Cycle:	3010
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : zero
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	3011
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(n) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[App[lamif c ] a ] b ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	3012
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : LAM[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	3013
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	3014
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : x
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	3015
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(f) 	= CLO[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]]
| env(x) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: CLO[App[pair true ]] 
| exprs: 
=============
===[C E K]===
Cycle:	3016
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : App[pair true ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	3017
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : pair
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	3018
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[App[App[App[lamif c ] a ] b ]]
Frame: application
| vals: 
| exprs: true 
=============
===[C E K]===
Cycle:	3019
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : true
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	3020
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[App[App[App[lamif c ] a ] b ]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[App[lamif c ] a ] b ]] 
| exprs: 
=============
===[C E K]===
Cycle:	3021
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[App[lamif c ] a ] b ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	3022
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[App[lamif c ] a ]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	3023
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : App[lamif c ]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	3024
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : lamif
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	3025
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
Frame: application
| vals: 
| exprs: c 
=============
===[C E K]===
Cycle:	3026
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : c
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	3027
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	3028
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : LAM[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	3029
Env: cond
| env(cond) 	= CLO[LAM[x]]
Code : CLO[LAM[App[App[cond e_true ] e_false ]]]
Frame: application
| vals: 
| exprs: a 
=============
===[C E K]===
Cycle:	3030
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : a
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	3031
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[App[App[cond e_true ] e_false ]]] 
| exprs: 
=============
===[C E K]===
Cycle:	3032
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : LAM[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	3033
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
Code : CLO[App[App[cond e_true ] e_false ]]
Frame: application
| vals: 
| exprs: b 
=============
===[C E K]===
Cycle:	3034
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : b
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	3035
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(a) 	= CLO[LAM[x]]
| env(b) 	= CLO[LAM[x]]
| env(c) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[cond e_true ] e_false ]] 
| exprs: 
=============
===[C E K]===
Cycle:	3036
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[App[cond e_true ] e_false ]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	3037
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : App[cond e_true ]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	3038
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : cond
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	3039
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: 
| exprs: e_true 
=============
===[C E K]===
Cycle:	3040
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_true
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	3041
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[LAM[x]] 
| exprs: 
=============
===[C E K]===
Cycle:	3042
Env: x
| env(x) 	= CLO[LAM[x]]
Code : LAM[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	3043
Env: x
| env(x) 	= CLO[LAM[x]]
Code : CLO[x]
Frame: application
| vals: 
| exprs: e_false 
=============
===[C E K]===
Cycle:	3044
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : e_false
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	3045
Env: cond
| env(cond) 	= CLO[LAM[x]]
| env(e_true) 	= CLO[LAM[x]]
| env(e_false) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[x] 
| exprs: 
=============
===[C E K]===
Cycle:	3046
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	3047
Env: x
| env(x) 	= CLO[LAM[x]]
| env(y) 	= CLO[LAM[x]]
Code : CLO[LAM[x]]
Frame: application
| vals: CLO[App[App[x x ] v ]] 
| exprs: 
=============
===[C E K]===
Cycle:	3048
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[App[x x ] v ]
Frame: application
| vals: CLO[LAM[LAM[App[App[n App[m f ] ] x ]]]] 
| exprs: 
=============
===[C E K]===
Cycle:	3049
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : App[x x ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	3050
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	3051
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: 
| exprs: x 
=============
===[C E K]===
Cycle:	3052
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : x
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	3053
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
| env(v) 	= CLO[LAM[x]]
Code : CLO[App[f LAM[App[App[x x ] v ]] ]]
Frame: application
| vals: CLO[App[f LAM[App[App[x x ] v ]] ]] 
| exprs: 
=============
===[C E K]===
Cycle:	3054
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : App[f LAM[App[App[x x ] v ]] ]
Frame: application
| vals: 
| exprs: v 
=============
===[C E K]===
Cycle:	3055
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : f
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	3056
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= CLO[LAM[LAM[LAM[App[App[m App[App[App[mult n ] n ] ++ ] ] x ]]]]]
| env(four) 	= CLO[LAM[App[f App[App[n f ] x ] ]]]
| env(five) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(six) 	= CLO[LAM[App[App[n f ] App[App[m f ] x ] ]]]
| env(sub1) 	= CLO[App[1st App[App[n LAM[App[App[pair App[2nd p ] ] App[add1 App[2nd p ] ] ]] ] App[App[pair zero ] zero ] ] ]]
| env(f) 	= CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
| env(x) 	= CLO[App[f LAM[App[App[x x ] v ]] ]]
Code : CLO[LAM[App[App[App[lamif App[zero? n ] ] one ] App[App[mult n ] App[fac App[sub1 n ] ] ] ]]]
Frame: application
| vals: 
| exprs: LAM[App[App[x x ] v ]] 
=============
===[C E K]===
Cycle:	3057
Env: true
| env(true) 	= CLO[LAM[x]]
| env(false) 	= CLO[LAM[y]]
| env(lamif) 	= CLO[LAM[LAM[App[App[cond e_true ] e_false ]]]]
| env(++) 	= CLO[App[+ x 1 ]]
| env(zero) 	= CLO[LAM[x]]
| env(one) 	= CLO[LAM[App[f x ]]]
| env(two) 	= CLO[LAM[App[f App[f x ] ]]]
| env(three) 	= CLO[LAM[App[f App[f App[f x ] ] ]]]
| env(pair) 	= CLO[LAM[LAM[App[App[App[lamif c ] a ] b ]]]]
| env(1st) 	= CLO[App[pair true ]]
| env(2nd) 	= CLO[App[pair false ]]
| env(zero?) 	= CLO[App[App[n LAM[false] ] true ]]
| env(add1) 	= CLO[LAM[LAM[App[f App[App[n f ] x ] ]]]]
| env(add) 	= CLO[LAM[LAM[LAM[App[App[n f ] App[App[m f ] x ] ]]]]]
| env(mult) 	= CLO[LAM[LAM[LAM[App[App[n App[m f ] ] x ]]]]]
| env(exp) 	= 